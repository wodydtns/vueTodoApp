vuex 구조
컴포넌트 -> 비동기 로직 -> 동기 로직 ->상태
Vue Components -> Actions -> Mutations -> State

state를 왜 mutations로 변경해야하는가?
 : 변경 추적을 해야함 -> state를 직접 변경할 경우 어느 컴포넌트에서 해당 state를 변경했는 지 추적하기 어려움
 => 뷰의 반응성을 거스르지 않게 명시적으로 상태 변화를 수행한다 -> mutations으로 할 경우 반응성, 디버깅, 테스팅 혜택이 있다.
 => 여러 컴포넌트에서 mutations로 시간 차를 두고 state를 변경해야하는 경우 -> state값 추적이 어려움 
         => mutations 속성에는 동기 처리 로직만 넣어야한다.(처리 시점 예상이 가능한 로직만 넣기)

actions란?
 : 비동기 로직을 선언하는 메소드 -> 비동기 로직을 담당하는 mutations
 : 데이터 요청, Promise, ES6 async와 같은 비동기 처리는 모두 actions에 선언
ex)
mutations:{
    setDate(state,fetchedData){
        state.product = fetchedData;
    }
},
actions:{
    fetchProductData(context){
        return axios.get('https://domain.com/products/1')
                .then(response=>context.commit('setData',response))
    }
}
// App.vue
methods:{
    getProduct(){
        this.$store.dispatch('fetchProductData');
    }
}


